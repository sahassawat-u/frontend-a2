{"remainingRequest":"/Users/bossiccs/Desktop/vue-todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bossiccs/Desktop/vue-todo/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bossiccs/Desktop/vue-todo/src/components/Task.vue","mtime":1611569500676},{"path":"/Users/bossiccs/Desktop/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/vue-todo/node_modules/babel-loader/lib/index.js","mtime":1611562587131},{"path":"/Users/bossiccs/Desktop/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/vue-todo/node_modules/vue-loader/lib/index.js","mtime":1611562596018}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: ['tasks'],\n    data() {\n      return {\n        editing: null,\n      }\n  },\n    methods:{\n\n    startEditing(todo){\n      this.editing = todo;\n    },\n    finishEditing(event) {\n      if (!this.editing) { return; }\n      const textbox = event.target;\n      this.editing.text = textbox.value;\n      this.editing = null;\n    },\n    cancelEditing() {\n      this.editing = null;\n    },\n    destroyTodo(todo){\n      const index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    \n  },\n}\n",{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <section class=\"main\">\n        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\">\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n            <li v-for=\"todo in tasks\" :key=\"todo.id\" \n            :class='{completed: todo.isDone, editing: todo === editing}'>\n                <div class=\"view\">\n                <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.isDone\">\n                <label @dblclick='startEditing(todo)'>{{todo.text}}</label>\n                <button class=\"destroy\" @click=\"destroyTodo(todo)\"></button>\n                </div>  \n                <input class=\"edit\" \n                    @keyup.esc=\"cancelEditing\"\n                    @keyup.enter=\"finishEditing\"\n                    @blur=\"finishEditing\"\n                    :value='todo.text'\n                >\n            </li>\n        </ul>\n    </section>\n</template>\n\n<script>\nexport default {\n    props: ['tasks'],\n    data() {\n      return {\n        editing: null,\n      }\n  },\n    methods:{\n\n    startEditing(todo){\n      this.editing = todo;\n    },\n    finishEditing(event) {\n      if (!this.editing) { return; }\n      const textbox = event.target;\n      this.editing.text = textbox.value;\n      this.editing = null;\n    },\n    cancelEditing() {\n      this.editing = null;\n    },\n    destroyTodo(todo){\n      const index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    \n  },\n}\n</script>"]}]}