{"remainingRequest":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bossiccs/Desktop/Rapid/vue-todo/src/components/Todo.vue?vue&type=template&id=ee48fd14&","dependencies":[{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/src/components/Todo.vue","mtime":1611564029774},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1611562596018},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/index.js","mtime":1611562596018}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"section\", { staticClass: \"todoapp\" }, [\n      _c(\"header\", { staticClass: \"header\" }, [\n        _c(\"h1\", [_vm._v(_vm._s(_vm.title))]),\n        _c(\"input\", {\n          staticClass: \"new-todo\",\n          attrs: {\n            placeholder: \"What needs to be done?\",\n            type: \"text\",\n            autofocus: \"\"\n          },\n          on: {\n            keyup: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.createTodo($event)\n            }\n          }\n        })\n      ]),\n      _c(\"section\", { staticClass: \"main\" }, [\n        _c(\"input\", {\n          staticClass: \"toggle-all\",\n          attrs: { id: \"toggle-all\", type: \"checkbox\" }\n        }),\n        _c(\"label\", { attrs: { for: \"toggle-all\" } }, [\n          _vm._v(\"Mark all as complete\")\n        ]),\n        _c(\n          \"ul\",\n          { staticClass: \"todo-list\" },\n          _vm._l(_vm.todos, function(todo, index) {\n            return _c(\n              \"li\",\n              {\n                key: \"todo-\" + index,\n                class: { completed: todo.isDone, editing: todo === _vm.editing }\n              },\n              [\n                _c(\"div\", { staticClass: \"view\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: todo.isDone,\n                        expression: \"todo.isDone\"\n                      }\n                    ],\n                    staticClass: \"toggle\",\n                    attrs: { type: \"checkbox\" },\n                    domProps: {\n                      checked: Array.isArray(todo.isDone)\n                        ? _vm._i(todo.isDone, null) > -1\n                        : todo.isDone\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = todo.isDone,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(todo, \"isDone\", $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                todo,\n                                \"isDone\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(todo, \"isDone\", $$c)\n                        }\n                      }\n                    }\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      on: {\n                        dblclick: function($event) {\n                          return _vm.startEditing(todo)\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(todo.text))]\n                  ),\n                  _c(\"button\", {\n                    staticClass: \"destroy\",\n                    on: {\n                      click: function($event) {\n                        return _vm.destroyTodo(todo)\n                      }\n                    }\n                  })\n                ]),\n                _c(\"input\", {\n                  staticClass: \"edit\",\n                  domProps: { value: todo.text },\n                  on: {\n                    keyup: [\n                      function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                            \"Esc\",\n                            \"Escape\"\n                          ])\n                        ) {\n                          return null\n                        }\n                        return _vm.cancelEditing($event)\n                      },\n                      function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.finishEditing($event)\n                      }\n                    ],\n                    blur: _vm.finishEditing\n                  }\n                })\n              ]\n            )\n          }),\n          0\n        )\n      ]),\n      _c(\"footer\", { staticClass: \"footer\" }, [\n        _c(\"span\", { staticClass: \"todo-count\" }, [\n          _c(\"strong\", [_vm._v(_vm._s(_vm.activeTodos.length))]),\n          _vm._v(\" item left\")\n        ]),\n        _c(\n          \"button\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.completedTodos.length,\n                expression: \"completedTodos.length\"\n              }\n            ],\n            staticClass: \"clear-completed\",\n            on: { click: _vm.clearCompleted }\n          },\n          [_vm._v(\"Clear completed\")]\n        )\n      ])\n    ]),\n    _vm._m(0)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"footer\", { staticClass: \"info\" }, [\n      _c(\"p\", [_vm._v(\"Double-click to edit a todo\")]),\n      _c(\"p\", [\n        _vm._v(\"Template by \"),\n        _c(\"a\", { attrs: { href: \"http://sindresorhus.com\" } }, [\n          _vm._v(\"Sindre Sorhus\")\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"Created by \"),\n        _c(\"a\", { attrs: { href: \"http://todomvc.com\" } }, [_vm._v(\"you\")])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"Part of \"),\n        _c(\"a\", { attrs: { href: \"http://todomvc.com\" } }, [_vm._v(\"TodoMVC\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}