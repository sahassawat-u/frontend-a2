{"remainingRequest":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bossiccs/Desktop/Rapid/vue-todo/src/components/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/src/components/Todo.vue","mtime":1611564029774},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/babel-loader/lib/index.js","mtime":1611562587131},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1611562595782},{"path":"/Users/bossiccs/Desktop/Rapid/vue-todo/node_modules/vue-loader/lib/index.js","mtime":1611562596018}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'todo',\n  data() {\n      return {\n        title: 'TO DO APP',\n        todos: [ \n      { text: 'Learn JavaScript ES6+ goodies', isDone: false },\n      { text: 'Learn Vue', isDone: false },\n      { text: 'Build something awesome', isDone: false },\n    ],\n    editing: null,\n      }\n  },\n   methods:{\n    createTodo(event){\n      const textbox = event.target;\n      this.todos.push({\n        text:textbox.value, isDone:false\n      });\n      textbox.value = '';\n    },\n    startEditing(todo){\n      this.editing = todo;\n    },\n    finishEditing(event) {\n      if (!this.editing) { return; }\n      const textbox = event.target;\n      this.editing.text = textbox.value;\n      this.editing = null;\n    },\n    cancelEditing() {\n      this.editing = null;\n    },\n    destroyTodo(todo){\n      const index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    clearCompleted(){\n      this.todos = this.activeTodos;\n    },\n  },\n  computed:{\n    activeTodos(){\n      return this.todos.filter(t=>!t.isDone);\n    },\n    completedTodos(){\n      return this.todos.filter(t=>t.isDone)\n    }\n  },\n}\n",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <section class=\"todoapp\">\n        <header class=\"header\">\n            <h1>{{ title }}</h1>\n            <input class=\"new-todo\" placeholder=\"What needs to be done?\" \n            type='text' @keyup.enter=\"createTodo\"\n            autofocus>\n        </header>\n        <!-- This section should be hidden by default and shown when there are todos -->\n        <section class=\"main\">\n            <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\">\n            <label for=\"toggle-all\">Mark all as complete</label>\n            <ul class=\"todo-list\">\n                <!-- These are here just to show the structure of the list items -->\n                <!-- List items should get the class `editing` when editing and `completed` when marked as completed -->\n                <li v-for=\"(todo, index) in todos\" :key=\"`todo-${index}`\" :class='{completed: todo.isDone, editing: todo === editing}'>\n                    <div class=\"view\">\n                    <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.isDone\">\n                    <label @dblclick='startEditing(todo)'>{{todo.text}}</label>\n                    <button class=\"destroy\" @click=\"destroyTodo(todo)\"></button>\n                    </div>  \n                    <input class=\"edit\" \n                        @keyup.esc=\"cancelEditing\"\n                        @keyup.enter=\"finishEditing\"\n                        @blur=\"finishEditing\"\n                        :value='todo.text'\n                    >\n                </li>\n            </ul>\n        </section>\n        <!-- This footer should hidden by default and shown when there are todos -->\n        <footer class=\"footer\">\n            <!-- This should be `0 items left` by default -->\n            <span class=\"todo-count\"><strong>{{activeTodos.length}}</strong> item left</span>\n            <!-- Hidden if no completed items are left ↓ -->\n            <button class=\"clear-completed\" @click='clearCompleted' \n            v-show=\"completedTodos.length\">Clear completed</button>\n        </footer>\n    </section>\n    <footer class=\"info\">\n        <p>Double-click to edit a todo</p>\n        <!-- Remove the below line ↓ -->\n        <p>Template by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a></p>\n        <!-- Change this out with your name and url ↓ -->\n        <p>Created by <a href=\"http://todomvc.com\">you</a></p>\n        <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n    </footer>\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'todo',\n  data() {\n      return {\n        title: 'TO DO APP',\n        todos: [ \n      { text: 'Learn JavaScript ES6+ goodies', isDone: false },\n      { text: 'Learn Vue', isDone: false },\n      { text: 'Build something awesome', isDone: false },\n    ],\n    editing: null,\n      }\n  },\n   methods:{\n    createTodo(event){\n      const textbox = event.target;\n      this.todos.push({\n        text:textbox.value, isDone:false\n      });\n      textbox.value = '';\n    },\n    startEditing(todo){\n      this.editing = todo;\n    },\n    finishEditing(event) {\n      if (!this.editing) { return; }\n      const textbox = event.target;\n      this.editing.text = textbox.value;\n      this.editing = null;\n    },\n    cancelEditing() {\n      this.editing = null;\n    },\n    destroyTodo(todo){\n      const index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    clearCompleted(){\n      this.todos = this.activeTodos;\n    },\n  },\n  computed:{\n    activeTodos(){\n      return this.todos.filter(t=>!t.isDone);\n    },\n    completedTodos(){\n      return this.todos.filter(t=>t.isDone)\n    }\n  },\n}\n</script>"]}]}